
python manage.py runserver
----------------------- Template setting------------------------------------------------------------
TEMPLATES = [
    {
        
        'DIRS': [os.path.join(BASE_DIR,'templates')], # this is your template folder path.
        
    },
]



-------------------------------------------------------------------------------------------------------



-------------------------------static files--------------------------------------------------------------
STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static") # this is your static folder
]

STATIC_ROOT = os.path.join(BASE_DIR,'assets') #this is you assets folder.

---------------------------------------------------------------------------------------------------------




---------------------------------------media-----------------------------------------------------------
MEDIA_URL ='/media/'

MEDIA_ROOT = os.path.join(BASE_DIR,'media')
-----------------------------------------------------------------------------------------------------






------------------------------configure static and media files to urls-------------------------------
from django.conf.urls.static import static
from django.conf import  settings


if settings.DEBUG:
    
    urlpatterns  += static(settings.STATIC_URL,document_root=settings.STATIC_ROOT)
    urlpatterns += static(settings.MEDIA_URL,document_root=settings.MEDIA_ROOT)
-------------------------------------------------------------------------------------------------------

--------------------------------data base--------------------------------------------------------------

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql', 
        'NAME': 'DB_NAME', # Database name
        'USER': 'DB_USER',
        'PASSWORD': 'DB_PASSWORD',
        'HOST': 'localhost',   # Or an IP Address that your DB is hosted on
        'PORT': '3306',
    }
}





---------------------------------time zone-------------------------------------------------------------
TIME_ZONE =  'Asia/Kolkata'
-------------------------------------------------------------------------------------------------------


Python manage.py migrate --run-syncdb






What is a QuerySet?
==================
A QuerySet is, in essence, a list of objects of a given Model. QuerySets allow you to read the data from the database, filter it and order it.


Django ORM
====== ====
The Django web framework includes a default object-relational mapping layer (ORM) that can be used to interact with application data from various relational databases such as SQLite, PostgreSQL and MySQL.

The Django ORM is an implementation of the object-relational mapping (ORM) concept.


Database Access through Managers:
========  ============= ========
According to the Django documentation - Django by default adds a manager called objects to every model class defined inside models.py file. 

This particular manager ( i.e objects) helps us to interact with the database in complicated ways. 

The objects manager is the most common way Django developers interact with the database.

To access objects, we need o use manager type model class name followed by the (.) dot operator then the objects manager. 
